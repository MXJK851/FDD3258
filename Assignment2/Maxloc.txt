#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <sys/time.h>

#include <omp.h>

int MAX_THREADS=1;
 struct a{double val; int loc; char pad[128];};
struct a maxinfo[1];

double mysecond();
double t1, t2; 
double x[1000000];
double main(){


int i;
double t1, t2;
int N=1000000;
	
srand(time(0)); // seed
for(int i=0; i < N;i++){
     // Generate random number between 0 and 1
     x[i] = ((double)(rand()) / RAND_MAX)*((double)(rand()) / RAND_MAX)*((double)(rand()) / RAND_MAX)*1000;
   }
    t1 = mysecond();

omp_set_num_threads(MAX_THREADS);

#pragma omp parallel shared(maxinfo)
{
int id=omp_get_thread_num();
maxinfo[id].val=-1.0e30;
  #pragma omp parallel for
    for (int i=0; i < 1000000; i++){
       if (x[i] > maxval[id]){
maxinfo[id].loc=i;
maxinfo[id].val=x[i]; 
}
            }
}
  t2 = mysecond();

  printf("Execution time: %11.8f s\n", (t2 - t1));

  return 0;
  
}

double mysecond(){
  struct timeval tp;
  struct timezone tzp;
  int i;

  i = gettimeofday(&tp,&tzp);
  return ( (double) tp.tv_sec + (double) tp.tv_usec * 1.e-6 );

}
